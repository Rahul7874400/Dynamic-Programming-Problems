#include<bits/stdc++.h>
const int mod=1e9+7;
using namespace std;

class Solution
{
    public:
    int lcs(int x, int y, string s1, string s2)
    {
        //using recusion
        if(x==0||y==0)
        return 0;
        
        
        
        if(s1[x-1]==s2[y-1])
        return 1+lcs(x-1,y-1,s1,s2);
        
        else
        {
            return  max(lcs(x-1,y,s1,s2),lcs(x,y-1,s1,s2));
        }
        
        
        // using dynamic pogamming
        int dp[x+1][y+1];
        
        for(int i=0;i<=x;i++)
        dp[i][0]=0;
        
        for(int i=0;i<=y;i++)
        dp[0][i]=0;
        
        
        for(int i=1;i<=x;i++){
            for(int j=1;j<=y;j++){
                
                if(s1[i-1]==s2[j-1])
                dp[i][j]=1+dp[i-1][j-1];
                
                else
                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            }
        }
        
        return dp[x][y];
        
    }
};


int main()
{
    int t,n,k,x,y;
    cin>>t;
    while(t--)
    {
        cin>>x>>y;          // Take size of both the strings as input
        string s1,s2;
        cin>>s1>>s2;        // Take both the string as input
        Solution ob;
        cout << ob.lcs(x, y, s1, s2) << endl;
    }
    return 0;
}
