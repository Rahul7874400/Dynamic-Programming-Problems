#include<bits/stdc++.h>
using namespace std;



class Solution
{
    public:
    int longestSubsequence(int n, int a[])
    {
    // using dynamic progamming
        int dp[n+1];
        
        for(int i=1;i<=n;i++)
        {
            dp[i]=1;
            
            for(int j=i;j>0;j--)
            {
                if(a[j-1]<a[i-1])
                dp[i]=max(dp[i],dp[j]+1);
            }
        }
        
        int res=dp[1];
        
        for(int i=2;i<=n;i++)
        res=max(res,dp[i]);
        
        return res;
    }
};

int main()
{
    //taking total testcases
    int t,n;
    cin>>t;
    while(t--)
    {
        //taking size of array
        cin>>n;
        int a[n];
        
        //inserting elements to the array
        for(int i=0;i<n;i++)
            cin>>a[i];
        Solution ob;
        //calling method longestSubsequence()
        cout << ob.longestSubsequence(n, a) << endl;
    }
}
