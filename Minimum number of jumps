#include<bits/stdc++.h>
using namespace std;


class Solution{
  public:
    int minJumps(int arr[], int n){
        /*
        if(n==1)
        return 0;
        
        int res=INT_MAX;
        
        for(int i=0;i<n-1;i++)
        {
            if(i+arr[i]>=n-1){
            int sub_res = minJumps(arr,i+1);
            
            res = min(res,sub_res+1);
            }
        }
        
        return res;
        */
        
        // using recursion
        
        int dp[n+1];
        dp[1]=0;
        for(int i=2;i<=n;i++)
        dp[i]=INT_MAX;
        
        for(int i=2;i<=n;i++)
        {
           // dp[i] = INT_MAX;
            for(int j=0;j<i-1;j++)
            {
                if(j+arr[j]>=i-1)
                {
                 if(dp[j+1]!=INT_MAX)
                 dp[i]=min(dp[i],dp[j+1]+1);
                }
            }
        }
        
        return dp[n]==INT_MAX?-1:dp[n];
    }
};


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,i,j;
        cin>>n;
        int arr[n];
        for(int i=0; i<n; i++)
            cin>>arr[i];
        Solution obj;
        cout<<obj.minJumps(arr, n)<<endl;
    }
    return 0;
}
