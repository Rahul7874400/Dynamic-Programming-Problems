#include<bits/stdc++.h>
using namespace std;


class Solution
{
    private:
     int lcs(int x, int y, string s1, string s2)
    {
        // using dynamic pogamming
        int dp[x+1][y+1];
        
        for(int i=0;i<=x;i++)
        dp[i][0]=0;
        
        for(int i=0;i<=y;i++)
        dp[0][i]=0;
        
        
        for(int i=1;i<=x;i++){
            for(int j=1;j<=y;j++){
                
                if(s1[i-1]==s2[j-1])
                dp[i][j]=1+dp[i-1][j-1];
                
                else
                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            }
        }
        
        return dp[x][y];
    }
    public:
    int shortestCommonSupersequence(string X, string Y, int m, int n)
    {
        int l=lcs(m,n,X,Y);
        
        return l+(m-l)+(n-l);
    }
};


int main()
{   
    
    int t;
    
    //taking total testcases
    cin >> t;
    while(t--){
    string X, Y;
    //taking String X and Y
	cin >> X >> Y;
	
	//calling function shortestCommonSupersequence()
	Solution obj;
	cout << obj.shortestCommonSupersequence(X, Y, X.size(), Y.size())<< endl;
    }
	return 0;
}
